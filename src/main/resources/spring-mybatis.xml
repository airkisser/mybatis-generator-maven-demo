<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.airkisser.mybatis.dao" resource-pattern="*Mapper.class"/>
    <context:component-scan base-package="com.airkisser.mybatis.service.impl"/>

    <!--引入属性文件,多个属性文件用逗号分隔-->
    <context:property-placeholder location="classpath:c3p0.properties"/>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/airkisser/mybatis/mapping/*.xml"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.airkisser.mybatis.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置那些类的方法进行事务管理 -->
    <aop:config>
        <aop:pointcut id="executeService" expression="execution(* com.airkisser.*.service..*(..)) or execution(* com.airkisser.*.web..*(..))"/>
        <aop:advisor pointcut-ref="executeService" advice-ref="txAdvice"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="load*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="read*" read-only="true"/>
            <tx:method name="sync*"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <beans profile="dev">
        <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <set>
                    <value>classpath:jdbc-dev.properties</value>
                </set>
            </property>
        </bean>
        <!-- data source -->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
            <property name="driverClass" value="${datasource.driverClassName}"/>
            <property name="jdbcUrl" value="${datasource.url}"/>
            <property name="user" value="${datasource.username}"/>
            <property name="password" value="${datasource.password}"/>
            <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
            <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
            <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
            <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
            <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
            <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
            <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
            <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
            <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
            <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
            <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
                属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
                如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
            <property name="maxStatements" value="${c3p0.maxStatements}"/>
            <!-- c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能,
                通过多线程实现多个操作同时被执行。Default: 3-->
            <property name="numHelperThreads" value="${c3p0.numHelperThreads}"/>
        </bean>
    </beans>
    <beans profile="test">
        <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <set>
                    <value>classpath:jdbc-test.properties</value>
                </set>
            </property>
        </bean>
        <!-- data source -->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
            <property name="driverClass" value="${datasource.driverClassName}"/>
            <property name="jdbcUrl" value="${datasource.url}"/>
            <property name="user" value="${datasource.username}"/>
            <property name="password" value="${datasource.password}"/>
            <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
            <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
            <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
            <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
            <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
            <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
            <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
            <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
            <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
            <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
            <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
                属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
                如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
            <property name="maxStatements" value="${c3p0.maxStatements}"/>
            <!-- c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能,
                通过多线程实现多个操作同时被执行。Default: 3-->
            <property name="numHelperThreads" value="${c3p0.numHelperThreads}"/>
        </bean>
    </beans>
    <beans profile="product">
        <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <set>
                    <value>classpath:jdbc-product.properties</value>
                </set>
            </property>
        </bean>
        <!-- data source -->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
            <property name="driverClass" value="${datasource.driverClassName}"/>
            <property name="jdbcUrl" value="${datasource.url}"/>
            <property name="user" value="${datasource.username}"/>
            <property name="password" value="${datasource.password}"/>
            <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
            <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
            <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
            <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
            <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
            <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
            <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
            <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
            <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
            <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
            <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
                属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
                如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
            <property name="maxStatements" value="${c3p0.maxStatements}"/>
            <!-- c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能,
                通过多线程实现多个操作同时被执行。Default: 3-->
            <property name="numHelperThreads" value="${c3p0.numHelperThreads}"/>
        </bean>
    </beans>

</beans>